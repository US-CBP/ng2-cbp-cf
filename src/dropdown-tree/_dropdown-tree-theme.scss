@import '~@angular/material/theming';

@mixin cf-dropdown-tree-theme($theme) {
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, warn);
    $is-dark-theme: map-get($theme, is-dark);

    .cf-dropdown-tree-content,
    .cf-dropdown-tree-panel-done-animating {
        background: mat-color($background, card);
    }

    .cf-dropdown-tree-value {
        color: mat-color($foreground, text);
    }

    .cf-dropdown-tree-placeholder {
        color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));
    }

    .cf-dropdown-tree-disabled .cf-dropdown-tree-value {
        color: mat-color($foreground, disabled-text);
    }

    .cf-dropdown-tree-arrow {
        color: mat-color($foreground, secondary-text);
    }

    .mat-form-field {
        &.mat-focused {
            &.mat-primary .cf-dropdown-tree-arrow {
                color: mat-color($primary);
            }

            &.mat-accent .cf-dropdown-tree-arrow {
                color: mat-color($accent);
            }

            &.mat-warn .cf-dropdown-tree-arrow {
                color: mat-color($warn);
            }
        }

        .cf-dropdown-tree.cf-dropdown-tree-invalid .cf-dropdown-tree-arrow {
            color: mat-color($warn);
        }

        .cf-dropdown-tree.cf-dropdown-tree-disabled .cf-dropdown-tree-arrow {
            color: mat-color($foreground, disabled-text);
        }
    }

    .cf-dropdown-tree-node {
        color: mat-color($foreground, text);

        .mat-primary &.cf-dropdown-tree-node-selected:not(.cf-dropdown-tree-node-disabled) > .cf-dropdown-tree-node-line > .cf-dropdown-tree-node-text {
            color: mat-color($primary);
        }

        .mat-accent &.cf-dropdown-tree-node-selected:not(.cf-dropdown-tree-node-disabled) > .cf-dropdown-tree-node-line > .cf-dropdown-tree-node-text {
            color: mat-color($accent);
        }

        .mat-warn &.cf-dropdown-tree-node-selected:not(.cf-dropdown-tree-node-disabled) > .cf-dropdown-tree-node-line > .cf-dropdown-tree-node-text {
            color: mat-color($warn);
        }

        &.cf-dropdown-tree-node-selected > .cf-dropdown-tree-node-line {
            background: mat-color($background, hover, 0.12);
        }

        &:not(.cf-dropdown-tree-node-disabled) > .cf-dropdown-tree-node-line:hover {
            background: mat-color($background, hover);
        }

        &.cf-dropdown-tree-node-highlighted > .cf-dropdown-tree-node-line {
            background: mat-color($background, hover);
        }

        &.cf-dropdown-tree-node-disabled > .cf-dropdown-tree-node-line > .cf-dropdown-tree-node-text,
        &.cf-dropdown-tree-node-not-selectable > .cf-dropdown-tree-node-line > .cf-dropdown-tree-node-text {
            color: mat-color($foreground, hint-text);
        }
    }
}

@mixin cf-dropdown-tree-typography($config) {
    $line-height: mat-line-height($config, input);

    .cf-dropdown-tree {
        font-family: mat-font-family($config);
    }

    .cf-dropdown-tree-trigger {
        height: $line-height * 1em;
    }

    .cf-dropdown-tree-node {
        font-family: mat-font-family($config, subheading-2);
    }

    .cf-dropdown-tree-node-arrow {
        padding-top: 8px;
    }
}
